name: CI with Maven

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
    types: [opened, synchronize]
  workflow_dispatch:

jobs:
  build:

    runs-on: ubuntu-latest
    env:
      SPRING_DATASOURCE_URL: jdbc:mysql://localhost:3306/Evera
      SPRING_DATASOURCE_USERNAME: Evera_staff
      SPRING_DATASOURCE_PASSWORD: senha1234

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: rootpass
          MYSQL_DATABASE: Evera
          MYSQL_USER: Evera_staff
          MYSQL_PASSWORD: senha1234
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping --silent"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3


    strategy:
      matrix:
        java: [ '17', '21' ]
        
    steps:

    - uses: actions/checkout@v4
      with:
        fetch-depth: 0 

    - name: Set up JDK
      uses: actions/setup-java@v4
      with:
        java-version: ${{ matrix.java }}
        distribution: 'temurin'
        cache: maven

    - name: Wait for MySQL to be ready
      run: |
        for i in {1..30}; do
          if mysqladmin ping -h "mysql" -u"Evera_staff" -p"senha1234" --silent 2>/dev/null; then
            echo "MySQL is ready!"
            break
          fi
          echo "Waiting for MySQL..."
          sleep 2
        done

    - name: Build and run unit tests
      working-directory: projX
      run: mvn -B package --file pom.xml -Djava.version=${{ matrix.java }}

    - name: Run integration tests
      working-directory: projX
      run: mvn -B integration-test verify --file pom.xml -Djava.version=${{ matrix.java }}

    - name: Print test logs on failure
      if: failure()
      run: |
        echo "==== Surefire Report ===="
        cat projX/target/surefire-reports/*.txt || true

    - name: Add code coverage information to PR
      id: jacoco-pr
      uses: madrapps/jacoco-report@v1.7.1
      if: github.event_name == 'pull_request'
      with:
        paths: |
          ${{ github.workspace }}/**/target/site/jacoco-merged-test-coverage-report/jacoco.xml 
        token: ${{ secrets.GITHUB_TOKEN }}
        min-coverage-overall: 80
        min-coverage-changed-files: 80

    - name: Print Xray credentials
      if: always()
      working-directory: projX
      run: |
        echo "Client ID: ${{ secrets.XRAYCLOUD_CLIENT_ID }}" | head -c 30
        echo ""
        echo "Client Secret: ${{ secrets.XRAYCLOUD_CLIENT_SECRET }}" | head -c 30

    - name: Push JUnit results to Xray on Jira Cloud
      if: always()
      working-directory: projX
      run: |
        for file in target/surefire-reports/TEST-*.xml; do
        echo "Uploading $file"
        mvn xray:import-results \
          -Dxray.clientId=${{ secrets.XRAYCLOUD_CLIENT_ID }} \
          -Dxray.clientSecret=${{ secrets.XRAYCLOUD_CLIENT_SECRET }} \
          -Dxray.testPlanKey=${{ vars.XRAYCLOUD_TEST_PLAN_KEY }} \
          -Dxray.revision=${{ github.ref_name }} \
          -Dxray.verbose=true \
          -Dxray.reportFormat=junit \
          -Dxray.reportFile=$file
        done

    - name: Push Cucumber results to Xray on Jira Cloud
      if: always()
      working-directory: projX
      run: |
        mvn xray:import-results \
          -Dxray.clientId=${{ secrets.XRAYCLOUD_CLIENT_ID }} \
          -Dxray.clientSecret=${{ secrets.XRAYCLOUD_CLIENT_SECRET }} \
          -Dxray.testPlanKey=${{ vars.XRAYCLOUD_TEST_PLAN_KEY }} \
          -Dxray.revision=${{ github.ref_name }} \
          -Dxray.verbose=true \
          -Dxray.reportFormat=cucumber \
          -Dxray.reportFile=target/surefire-reports/cucumber-report.json